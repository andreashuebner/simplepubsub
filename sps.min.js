var sps=sps||{};sps.arrayEvents=[],sps._isString=function(a){return"string"==typeof a},sps._isFunction=function(a){return"function"==typeof a},sps._isObject=function(a){var b={}.toString.apply(a);return"[object Object]"===b},sps._objectInArray=function(a){var b=0;2===a.eventRef.id&&(b=1);for(var c=0,d=0;d<sps.arrayEvents.length;d++){var e=sps.arrayEvents[d];e.eventRef===a.eventRef&&e.eventName===a.eventName&&String(a.eventCallback)===String(e.eventCallback)&&(c=1)}return 0===c?!1:!0},Object.prototype.spson=function(a,b){var c=this;if(sps._isString(a)===!1)throw new Error("spson method expects first parameter to be a string");if(sps._isObject(c)===!1)throw new Error("spson method needs to be called on object");if(sps._isFunction(b)===!1)throw new Error("spson method expects second parameter to be a callback function");var d={},d={eventRef:c,eventName:a,eventCallback:b};sps._objectInArray(d)===!1&&sps.arrayEvents.push(d)},Object.prototype.spsoff=function(a){if(sps._isString(a)===!1)throw new Error("spsoff method expect as first parameter the name of the custom event to unsubscribe from as a string.");for(var b=0;b<sps.arrayEvents.length;b++){var c=sps.arrayEvents[b];c.eventName===a&&sps.arrayEvents.splice(b,1)}},sps.trigger=function(a,b){if(sps._isString(a)===!1)throw new Error("sps trigger expects first argument to be the name of event as string");for(var c=0;c<sps.arrayEvents.length;c++){var d=sps.arrayEvents[c];d.eventName===a&&(sps._isObject(b)?d.eventCallback.call(d.eventRef,b):d.eventCallback.call(d.eventRef,{}))}};